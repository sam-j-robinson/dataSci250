p <- 1/3                                           # Set the chance of heads
tosses <- runif(1e6) < p                           # Make a million tosses
sim <- diff(c(TRUE, which(tosses)))                # Compute game lengths
hist(sim, xlab="Game length", main="Distribution") # Graph their distribution
mean(sim)                                          # Report the average length
p <- 1/2                                          # Set the chance of heads
tosses <- runif(1e6) < p                           # Make a million tosses
sim <- diff(c(TRUE, which(tosses)))                # Compute game lengths
hist(sim, xlab="Game length", main="Distribution") # Graph their distribution
mean(sim)                                          # Report the average length
p <- 107/207                                          # Set the chance of heads
tosses <- runif(1e6) < p                           # Make a million tosses
sim <- diff(c(TRUE, which(tosses)))                # Compute game lengths
hist(sim, xlab="Game length", main="Distribution") # Graph their distribution
mean(sim)                                          # Report the average length
sum(sim)
length(sim)
sum(sim)-length(sim)
mean(sim)
p <- 107/207
children <- runif(1e6) < p #run the test for a million families
sim <- diff(c(TRUE, which(children)))
hist(sim, xlab="Children", main="Children Before Boy")
sum(sim)
length(sim)
sum(sim)-length(sim)
mean(sim)
p <- 107/207
children <- runif(1e6) < p #run the test for a million families
sim <- diff(c(TRUE, which(children)))
hist(sim, xlab="Children", main="Children Before Boy")
sum(sim)
length(sim)
sum(sim)-length(sim)
mean(sim)
sum(sim)
length(sim)
sum(sim)-length(sim)
mean(sim)
file="http://www.openintro.org/stat/data/cdc.Rfile="http://www.openintro.org/stat/data/cdc.R
load(file="http://www.openintro.org/stat/data/cdc.R)
x <- seq(-5,3, 0.01)
ls
clear
x <- seq(-5,3, 0.01)
quit
exit
clear
